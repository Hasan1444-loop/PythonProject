# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1xgJO5qa9ImBbTUj6vITzRReNPEVYFgjy
"""

class Library:
    def __init__(self, open_books='books.txt'):
        self.open_books = open_books
        try:
            self.books_file = open(self.open_books, 'a+')
            print(f"{self.open_books} opened successfully.")
        except Exception as e:
            print(f"Error opening file: {e}")

    def __del__(self):
        try:
            if hasattr(self, 'books_file') and self.books_file:
                self.books_file.close()
                print(f"{self.open_books} closed.")
        except Exception as e:
            print(f"Error closing file: {e}")

    def list_books(self):
        try:
            file_contents = self.books_file.read()
            book_lines = file_contents.splitlines()
            for line in book_lines:
                book_info = line.split(', ')
                if len(book_info) == 4:
                    book_name, author, release_date, num_pages = book_info
                    print(f"Book: {book_name}, Author: {author}")
        except Exception as e:
            print(f"Error listing books: {e}")

    def add_book(self):
        try:
            book_title = input("Input the book title: ")
            book_author = input("Author of the book: ")
            release_year = input("Release Date: ")
            num_pages = input("Number of pages: ")

            book_info = f"{book_title}, {book_author}, {release_year}, {num_pages}"

            self.books_file.write(book_info + '\n')
            print(f"Book '{book_title}' has been added.")
        except Exception as e:
            print(f"Error adding book: {e}")

    def remove_book(self):
        try:
            delete_book = input("Which book do you want to remove? ")
            self.books_file.seek(0)
            file_contents = self.books_file.read()
            book_lines = file_contents.splitlines()
            find_index = -1
            for i, line in enumerate(book_lines):
                if delete_book in line:
                    find_index = i
                    break
            if find_index != -1:
                del book_lines[find_index]
                self.books_file.truncate(0)
                for line in book_lines:
                    self.books_file.write(line + '\n')

                print(f"Book '{delete_book}' has been removed.")
            else:
                print(f"Book '{delete_book}' not found in the library.")
        except Exception as e:
            print(f"Error removing book: {e}")

# Outside of the class
lib = Library()
print("*** MENU ***")
print("1) List Books")
print("2) Add Book")
print("3) Remove Book")
user_input = input("Make your choice: ")

if user_input == '1':
    lib.list_books()
elif user_input == '2':
    lib.add_book()
elif user_input == '3':
    lib.remove_book()
else:
    print("Please select a valid menu option: (1/2/3)")